{"version":3,"sources":["theme/index.js","App.styles.js","Start/styles.js","Start/index.js","Game/styles.js","Game/webgl.js","Game/index.js","Game/graph.js","GameOver/styles.js","GameOver/index.js","App.jsx","index.js"],"names":["theme","createMuiTheme","palette","type","background","default","primary","lightGreen","useStyles","makeStyles","root","backgroundRepeat","backgroundPosition","height","display","wrapper","padding","spacing","justifyContent","backdropFilter","flexDirection","title","fontFamily","textAlign","userSelect","subtitle","controlText","controlsWrapper","marginTop","controls","maxWidth","margin","numberInputs","width","borderRadius","buttonGroup","submit","Start","onSubmit","classes","visible","useState","setWidth","setHeight","fade","setFade","Grow","in","onExited","e","Container","className","Typography","variant","component","preventDefault","TextField","id","required","color","size","value","onChange","val","target","label","ButtonGroup","Button","href","marginLeft","loadShader","gl","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","deleteShader","console","error","webgl","initialize","canvas","onInit","onRender","getContext","success","message","shaderProgram","vShaderSource","fShaderSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","initShaderProgram","programInfo","program","attribLocations","vertexPosition","getAttribLocation","vertexColor","uniformLocations","projectionMatrix","getUniformLocation","modelViewMatrix","previousTime","requestAnimationFrame","render","time","delta","createBuffers","vertices","indices","positions","colors","i","length","push","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","colorBuffer","indexBuffer","ELEMENT_ARRAY_BUFFER","Uint16Array","position","buffer","renderBuffers","buffers","vertexAttribPointer","FLOAT","enableVertexAttribArray","useProgram","uniformMatrix4fv","drawElements","TRIANGLES","UNSIGNED_SHORT","camera","player","playerColorBottom","playerColorTop","playerColorSide","stubbleColor","playerBuffers","stubbleBuffers","stubblePositions","deltaFrame","keys","down","up","left","right","Game","board","onFinish","window","innerWidth","innerHeight","physicalSize","setPhysicalSize","start","useEffect","resizeTimeout","resize","clearTimeout","setTimeout","addEventListener","wheel","wheelDelta","keydown","key","keyup","removeEventListener","document","getElementById","vertexCount","array","j","cell","toString","wallColorTop","wallColorBottom","floorColor","end","concat","charAt","playerVertices","stubbleVertices","clearColor","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","fieldOfView","Math","PI","aspect","clientWidth","clientHeight","mat4","create","perspective","cellData","floor","playerSpeed","unshift","pop","cam","thresholdX","thresholdY","modelViewMatrixScene","rotate","translate","modelViewMatrixPlayer","min","modelViewMatrixStubble","EdgeTypes","bottom","binary","decimal","top","EdgeOpposites","oppositeType","direction","zeroBit","int","idx","bin","substring","parseInt","createEdge","x","y","edgeType","nX","nY","getEdges","edges","potentialEdges","graph","createNewBoard","bArray","arr","randomWalk","visited","availableNeighbors","Object","node","random","split","map","item","onReturn","App","setBoard","mode","setMode","ThemeProvider","CssBaseline","fluid","GameOver","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.93269bd4.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\nimport { lightGreen } from \"@material-ui/core/colors\";\nconst theme = createMuiTheme(({\n    palette: {\n        type: \"dark\",\n        background: {\n            default: \"rgba(3, 7, 54, 1)\"\n        },\n        primary: lightGreen\n    }\n}));\n\nexport { theme };","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        background: `url(background.jpg)`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \"center\",\n        height: \"100vh\",\n        display: \"flex\"\n    }\n}));\n\nexport { useStyles }; ","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        background: `url(background.jpg)`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \"center\",\n        height: \"100vh\",\n        display: \"flex\"\n    },\n    wrapper: {\n        padding: theme.spacing(10),\n        justifyContent: \"center\",\n        backdropFilter: \"blur(10px)\",\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    title: {\n        fontFamily: \"DotGothic16, sans-serif\",\n        textAlign: \"center\",\n        backdropFilter: \"blur(10px)\",\n        userSelect: \"none\"\n    },\n    subtitle: {\n        fontFamily: \"DotGothic16, sans-serif\",\n        textAlign: \"center\",\n        userSelect: \"none\"\n    },\n    controlText: {\n        userSelect: \"none\",\n        fontFamily: \"DotGothic16, sans-serif\",\n    },\n    controlsWrapper: {\n        marginTop: theme.spacing(2),\n        textAlign: \"center\"\n    },\n    controls: {\n        maxWidth: 500,\n        margin: \"auto\",\n        textAlign: \"left\"\n    },\n    numberInputs: {\n        margin: theme.spacing(1),\n        width: \"10\",\n        borderRadius: \"0px\",\n        textAlign: \"center\"\n    },\n    buttonGroup: {\n        textAlign: \"center\",\n    },\n    submit: {\n        fontFamily: \"DotGothic16, sans-serif\",\n        textAlign: \"right\"\n    }\n}));\n\nexport { useStyles };","import { useState } from \"react\";\nimport {\n    Typography,\n    Container,\n    Grow,\n    Button,\n    ButtonGroup,\n    TextField\n} from \"@material-ui/core\"\nimport { useStyles } from \"./styles\";\n\n\nconst Start = ({ onSubmit, visible }) => {\n    const classes = useStyles();\n    const [width, setWidth] = useState(10);\n    const [height, setHeight] = useState(10);\n    const [fade, setFade] = useState(true);\n    const _onSubmit = (e) => {\n        e.preventDefault();\n        setFade(false);\n    }\n    const _onWidthChange = (e) => {\n        let val = e.target.value;\n        if (val < 1) {\n            val = 1;\n        } else if (val > 50) {\n            val = 50;\n        }\n        setWidth(val);\n    }\n    const _onHeightChange = (e) => {\n        let val = e.target.value;\n        if (val < 1) {\n            val = 1;\n        } else if (val > 50) {\n            val = 50;\n        }\n        setHeight(val);\n    }\n    const _onExited = (e) => {\n        if (onSubmit) {\n            onSubmit(width, height);\n        }\n    }\n    return (\n        <Grow in={fade} onExited={_onExited}>\n            <Container className={classes.wrapper}>\n                <Typography variant=\"h1\" component=\"h1\" className={classes.title}>\n                    MAZE\n                </Typography>\n                <Typography variant=\"subtitle1\" component=\"h2\" className={classes.subtitle}>\n                    Shivan Modha (RU-CS428)\n                </Typography>\n                <Container maxWidth=\"sm\" className={classes.controlsWrapper}>\n                    <form onSubmit={_onSubmit} className={classes.controls}>\n                        <div>\n                            <TextField id=\"input-wid\" required color=\"primary\" size=\"small\" variant=\"outlined\" value={width} onChange={_onWidthChange} label=\"width\" type=\"number\" className={classes.numberInputs} />\n                            <TextField id=\"input-hei\" required color=\"primary\" size=\"small\" variant=\"outlined\" value={height} onChange={_onHeightChange} label=\"height\" type=\"number\" className={classes.numberInputs} />\n                        </div>\n                        <div className={classes.buttonGroup}>\n                            <ButtonGroup>\n                                <Button color=\"default\" href=\"https://shivan.modha.io\" className={classes.submit}>home</Button>\n                                <Button type=\"submit\" color=\"primary\" className={classes.submit}>start</Button>\n                            </ButtonGroup>\n                        </div>\n                    </form>\n                </Container>\n            </Container>\n        </Grow>\n    )\n}\n\nexport default Start;","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        marginLeft: -theme.spacing(3),\n        backdropFilter: \"blur(10px)\",\n    }\n}));\n\nexport { useStyles };","const vertexShaderSource = `\nattribute vec4 vertexPosition;\nattribute vec4 vertexColor;\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\n\nvarying lowp vec4 color;\n\nvoid main(void) {\n    gl_Position = projectionMatrix * modelViewMatrix * vertexPosition;\n    color = vertexColor;\n}\n`\n\nconst fragmentShaderSource = `\nvarying lowp vec4 color;\n\nvoid main(void) {\n    gl_FragColor = color;\n}\n`\n\nconst loadShader = (gl, type, source) => {\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        gl.deleteShader(shader);\n        console.error(\"Failed to compile shaders\");\n        return null;\n    }\n    return shader;\n}\n\nconst initShaderProgram = (gl, vShaderSource, fShaderSource) => {\n    const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vShaderSource);\n    const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fShaderSource);\n    const shaderProgram = gl.createProgram();\n    gl.attachShader(shaderProgram, vertexShader);\n    gl.attachShader(shaderProgram, fragmentShader);\n    gl.linkProgram(shaderProgram);\n\n    if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n        console.error(\"Failed to initialize shader program: \" + gl.getProgramInfoLog(shaderProgram));\n        return null;\n    }\n    return shaderProgram;\n}\n\nconst initialize = (canvas, onInit, onRender) => {\n    const gl = canvas.getContext(\"webgl2\");\n\n    if (!gl) {\n        return { success: false, message: \"Unable to initialize webgl. Your browser or machine may not support it.\" };\n    }\n\n    const shaderProgram = initShaderProgram(gl, vertexShaderSource, fragmentShaderSource);\n\n    if (!shaderProgram) {\n        return { success: false, message: \"Unable to initialize shaders. Check the logs for more errors.\" };\n    }\n\n    const programInfo = {\n        program: shaderProgram,\n        attribLocations: {\n            vertexPosition: gl.getAttribLocation(shaderProgram, \"vertexPosition\"),\n            vertexColor: gl.getAttribLocation(shaderProgram, \"vertexColor\")\n        },\n        uniformLocations: {\n            projectionMatrix: gl.getUniformLocation(shaderProgram, \"projectionMatrix\"),\n            modelViewMatrix: gl.getUniformLocation(shaderProgram, \"modelViewMatrix\"),\n        }\n    };\n\n    if (onInit) {\n        onInit(gl);\n    }\n\n    if (onRender) {\n        let previousTime = 0;\n        const render = (time) => {\n            const delta = (time * 0.001) - previousTime\n            previousTime = time * 0.001;\n            let goOn = onRender(gl, programInfo, delta);\n            if (goOn) {\n                requestAnimationFrame(render);\n            } else {\n                \n            }\n        }\n        requestAnimationFrame(render);\n    }\n}\n\nconst createBuffers = (gl, vertices, indices) => {\n    // Convert the indices and vertices into buffers\n    let positions = [];\n    let colors = [];\n    for (let i = 0; i < vertices.length; i++) {\n        positions.push(vertices[i][0], vertices[i][1], vertices[i][2])\n        colors.push(vertices[i][3], vertices[i][4], vertices[i][5], vertices[i][6]);\n    }\n    const positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\n    const colorBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW);\n    const indexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\n    return {\n        position: positionBuffer,\n        color: colorBuffer,\n        indices: {\n            buffer: indexBuffer,\n            length: indices.length\n        }\n    };\n}\n\nconst renderBuffers = (gl, programInfo, buffers, projectionMatrix, modelViewMatrix) => {\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.position);\n    gl.vertexAttribPointer(programInfo.attribLocations.vertexPosition, 3, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(programInfo.attribLocations.vertexPosition);\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffers.color);\n    gl.vertexAttribPointer(programInfo.attribLocations.vertexColor, 4, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(programInfo.attribLocations.vertexColor);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices.buffer);\n    gl.useProgram(programInfo.program);\n    gl.uniformMatrix4fv(programInfo.uniformLocations.projectionMatrix, false, projectionMatrix);\n    gl.uniformMatrix4fv(programInfo.uniformLocations.modelViewMatrix, false, modelViewMatrix);\n    gl.drawElements(gl.TRIANGLES, buffers.indices.length, gl.UNSIGNED_SHORT, 0);\n}\n\nconst webgl = {\n    initialize,\n    createBuffers,\n    renderBuffers\n}\n\nexport default webgl","import { useState, useEffect } from \"react\";\nimport { Grow } from \"@material-ui/core\"\nimport { useStyles } from \"./styles\";\nimport webgl from \"./webgl\";\nimport {mat4} from \"gl-matrix\";\n\nlet camera = [0.0, 0.0, 0.0];\nlet player = [0.0, 0.0, 0.5];\nlet playerColorBottom = [0.75, 0.01, 0.98, 1.0];\nlet playerColorTop = [0.75 / 2, 0.01 / 2, 0.98 / 2, 1.0];\nlet playerColorSide = [0.75 / 1.5, 0.01 / 1.5, 0.98 / 1.5, 1.0];\nlet stubbleColor = [0.1, 0.1, 0.1, 0.001];\nlet buffers = {};\nlet playerBuffers = {};\nlet stubbleBuffers = {};\nlet stubblePositions = [];\nlet fade = true;\nlet deltaFrame = 0;\nlet keys = {\n    down: false,\n    up: false,\n    left: false,\n    right: false\n};\n\nconst Game = ({ board, onFinish }) => {\n    const classes = useStyles();\n    const [physicalSize, setPhysicalSize] = useState([window.innerWidth, window.innerHeight]);\n    stubblePositions = [];\n    player = [board.start[0] + 0.5, board.start[1] + 0.5, 0];\n    camera = [-player[0], -player[1], -10.0];\n    useEffect(() => {\n        let resizeTimeout;\n        const resize = () => {\n            clearTimeout(resizeTimeout);\n            resizeTimeout = setTimeout(() => {\n                setPhysicalSize([window.innerWidth, window.innerHeight]);\n            }, 500);\n        }\n        window.addEventListener(\"resize\", resize);\n        const wheel = (e) => {\n            camera[2] += e.wheelDelta * 0.005;\n        }\n        window.addEventListener(\"wheel\", wheel);\n        const keydown = (e) => {\n            if (e.key === \"ArrowUp\") {\n                keys.up = true;\n            }\n            if (e.key === \"ArrowDown\") {\n                keys.down = true;\n            }\n            if (e.key === \"ArrowLeft\") {\n                keys.left = true;\n            }\n            if (e.key === \"ArrowRight\") {\n                keys.right = true;\n            }\n        }\n        window.addEventListener(\"keydown\", keydown);\n        const keyup = (e) => {\n            if (e.key === \"ArrowUp\") {\n                keys.up = false;\n            }\n            if (e.key === \"ArrowDown\") {\n                keys.down = false;\n            }\n            if (e.key === \"ArrowLeft\") {\n                keys.left = false;\n            }\n            if (e.key === \"ArrowRight\") {\n                keys.right = false;\n            }\n        }\n        window.addEventListener(\"keyup\", keyup);\n        return () => {            \n            window.removeEventListener(\"resize\", resize, false);\n            window.removeEventListener(\"wheel\", wheel, false);\n            window.removeEventListener(\"keydown\", keydown, false);\n            window.removeEventListener(\"keyup\", keyup, false);\n            window.removeEventListener(\"resize\", resize, true);\n            window.removeEventListener(\"wheel\", wheel, true);\n            window.removeEventListener(\"keydown\", keydown, true);\n            window.removeEventListener(\"keyup\", keyup, true);\n        }\n    });\n    const _onExited = () => {\n        fade = true;\n        onFinish();\n    }\n    useEffect(() => {\n        fade = true;\n        let canvas = document.getElementById(\"webgl-context\");\n        webgl.initialize(canvas, (gl) => {\n            let vertices = [];\n            let indices = [];\n            let vertexCount = 0;\n            for (let i = 0; i < board.array.length; i++) {\n                for (let j = 0; j < board.array[i].length; j++) {\n                    let cell = board.array[i][j].toString(2); // represented as a binary integer\n                    while (cell.length < 4) {\n                        cell = `0${cell}`;\n                    }\n                    let wallColorTop = [0.99, 0.72, 0.01, 0.5];\n                    let wallColorBottom = [0.99 / 3, 0.72 / 3, 0.01 / 3, 1.0];\n                    let floorColor = [0.01, 0.02, 0.21, 0.5];\n                    if (board.start[0] === i && board.start[1] === j) {\n                        floorColor = [1.0, 0.0, 0.0, 0.005];\n                    } else if (board.end[0] === i && board.end[1] === j) {\n                        floorColor = [0.0, 1.0, 0.0, 0.005];\n                    }\n                    vertices.push(\n                        [i + 0.0, j + 0.0, 0.0].concat(floorColor),\n                        [i + 1.0, j + 0.0, 0.0].concat(floorColor),\n                        [i + 1.0, j + 1.0, 0.0].concat(floorColor),\n                        [i + 0.0, j + 1.0, 0.0].concat(floorColor),\n                        \n                        [i + 0.0, j + 0.0, 1.0].concat(wallColorTop),\n                        [i + 1.0, j + 0.0, 1.0].concat(wallColorTop),\n                        [i + 1.0, j + 1.0, 1.0].concat(wallColorTop),\n                        [i + 0.0, j + 1.0, 1.0].concat(wallColorTop),\n\n                        \n                        [i + 0.0, j + 0.0, 0.0].concat(wallColorBottom),\n                        [i + 1.0, j + 0.0, 0.0].concat(wallColorBottom),\n                        [i + 1.0, j + 1.0, 0.0].concat(wallColorBottom),\n                        [i + 0.0, j + 1.0, 0.0].concat(wallColorBottom),\n                    );\n        \n                    //floor\n                    indices.push(\n                        vertexCount + 0, vertexCount + 1, vertexCount + 2,\n                        vertexCount + 0, vertexCount + 2, vertexCount + 3);\n        \n                    // bottom barrier\n                    if (cell.charAt(0) === '1') {\n                        indices.push(\n                            vertexCount + 8, vertexCount + 9, vertexCount + 4,\n                            vertexCount + 9, vertexCount + 4, vertexCount + 5);\n                    }\n                    \n                    // right barrier\n                    if (cell.charAt(1) === '1') {\n                        indices.push(\n                            vertexCount + 9, vertexCount + 10, vertexCount + 5,\n                            vertexCount + 10, vertexCount + 5, vertexCount + 6);\n                    }\n        \n                    // top barrier\n                    if (cell.charAt(2) === '1') {\n                        indices.push(\n                            vertexCount + 10, vertexCount + 11, vertexCount + 6,\n                            vertexCount + 11, vertexCount + 6, vertexCount + 7);\n                    }\n        \n                    // left barrier\n                    if (cell.charAt(3) === '1') {\n                        indices.push(\n                            vertexCount + 11, vertexCount + 8, vertexCount + 7,\n                            vertexCount + 8, vertexCount + 7, vertexCount + 4);\n                    }\n        \n                    vertexCount += 12;\n                }\n            }\n            buffers = webgl.createBuffers(gl, vertices, indices);\n            \n            let playerVertices = [\n                [-0.12, -0.12, 0.01].concat(playerColorBottom),\n                [+0.12, -0.12, 0.01].concat(playerColorBottom),\n                [+0.12, +0.12, 0.01].concat(playerColorBottom),\n                [-0.12, +0.12, 0.01].concat(playerColorBottom),\n\n                [-0.10, -0.10, 0.1].concat(playerColorTop),\n                [+0.10, -0.10, 0.1].concat(playerColorTop),\n                [+0.10, +0.10, 0.1].concat(playerColorTop),\n                [-0.10, +0.10, 0.1].concat(playerColorTop),\n                \n                [-0.12, -0.12, 0.01].concat(playerColorBottom),\n                [+0.12, -0.12, 0.01].concat(playerColorBottom),\n                [-0.10, -0.10, 0.1 ].concat(playerColorBottom),\n                [+0.10, -0.10, 0.1 ].concat(playerColorBottom),\n                \n                [+0.12, -0.12, 0.01].concat(playerColorSide),\n                [+0.12, +0.12, 0.01].concat(playerColorSide),\n                [+0.10, -0.10, 0.1 ].concat(playerColorSide),\n                [+0.10, +0.10, 0.1 ].concat(playerColorSide),\n\n                \n                [-0.12, -0.12, 0.01].concat(playerColorSide),\n                [-0.12, +0.12, 0.01].concat(playerColorSide),\n                [-0.10, -0.10, 0.1 ].concat(playerColorSide),\n                [-0.10, +0.10, 0.1 ].concat(playerColorSide),\n            ];\n            let playerIndices = [\n                0, 1, 2,\n                0, 2, 3,\n                \n                4, 5, 6,\n                4, 6, 7,\n\n                8, 9, 10,\n                9, 10, 11,\n                \n                12, 13, 14,\n                13, 14, 15,\n                \n                16, 17, 18,\n                17, 18, 19\n            ];            \n            playerBuffers = webgl.createBuffers(gl, playerVertices, playerIndices);\n\n            \n            let stubbleVertices = [\n                [-0.07, -0.07, 0.01].concat(stubbleColor),\n                [+0.07, -0.07, 0.01].concat(stubbleColor),\n                [+0.07, +0.07, 0.01].concat(stubbleColor),\n                [-0.07, +0.07, 0.01].concat(stubbleColor),\n            ];\n            let stubbleIndices = [\n                0, 1, 2,\n                0, 2, 3,\n            ];      \n            stubbleBuffers = webgl.createBuffers(gl, stubbleVertices, stubbleIndices);\n        }, (gl, programInfo, delta) => {\n            gl.clearColor(0.0, 0.0, 0.0, 0.0);\n            gl.clearDepth(1.0);\n            gl.enable(gl.DEPTH_TEST);\n            gl.depthFunc(gl.LEQUAL);\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n            const fieldOfView = 45 * Math.PI / 180;\n            const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\n            const zNear = 0.1;\n            const zFar = 1000.0;\n            const projectionMatrix = mat4.create();\n            mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\n\n            let cellData = board.array[Math.floor(player[0])][Math.floor(player[1])].toString(2);\n            while (cellData.length < 4) {\n                cellData = `0${cellData}`;\n            }\n            if (Math.floor(player[0]) === board.end[0] && Math.floor(player[1]) === board.end[1]) {\n                fade = false;\n                setTimeout(() => {\n                    setPhysicalSize([window.innerWidth, window.innerHeight]);\n                }, 500);\n            }\n            let playerSpeed = deltaFrame * 3;\n            if (keys.up) {            \n                if (cellData.charAt(2) === '1') {\n                    if (player[1] + 0.17 < Math.floor(player[1]) + 1) {\n                        player[1] += playerSpeed;\n                    }\n                } else {\n                    if (player[1] + 0.17 < board.array[0].length) {\n                        player[1] += playerSpeed;\n                    }\n                }\n            }\n            if (keys.down) {\n                if (cellData.charAt(0) === '1') {\n                    if (player[1] - 0.17 > Math.floor(player[1])) {\n                        player[1] -= playerSpeed;\n                    }\n                } else {\n                    if (player[1] - 0.17 > 0) {\n                        player[1] -= playerSpeed;\n                    }\n                }\n            }\n            if (keys.right) {   \n                if (cellData.charAt(1) === '1') {\n                    if (player[0] + 0.17 < Math.floor(player[0]) + 1) {\n                        player[0] += playerSpeed;\n                    }\n                } else {\n                    if (player[0] + 0.17 < board.array.length) {\n                        player[0] += playerSpeed;\n                    }\n                }\n            }\n            if (keys.left) {\n                if (cellData.charAt(3) === '1') {\n                    if (player[0] - 0.17 > Math.floor(player[0])) {\n                        player[0] -= playerSpeed;\n                    }\n                } else {\n                    if (player[0] - 0.17 > 0) {\n                        player[0] -= playerSpeed;\n                    }\n                }\n            }\n\n            stubblePositions.unshift([player[0], player[1], player[2]]);\n            if (stubblePositions.length > 500) {\n                stubblePositions.pop();\n            }\n\n            camera[0] = -player[0];\n            camera[1] = -player[1];\n\n            let cam = [camera[0], camera[1], camera[2]];\n            let thresholdX = 3.25;\n            let thresholdY = 3.25;\n            if (cam[0] > -thresholdX) {\n                cam[0] = -thresholdX;\n            }\n            if (cam[0] < -(board.array.length - thresholdX)) {\n                cam[0] = -(board.array.length - thresholdX);\n            }\n            if (cam[1] > -thresholdY) {\n                cam[1] = -thresholdY;\n            }\n            if (cam[1] < -(board.array[0].length - thresholdY)) {\n                cam[1] = -(board.array[0].length - thresholdY);\n            }\n\n            cam[1] += -(cam[2] / 2);\n\n            const modelViewMatrixScene = mat4.create();\n            mat4.rotate(modelViewMatrixScene, modelViewMatrixScene, -0.5, [1, 0, 0]);\n            mat4.translate(modelViewMatrixScene, modelViewMatrixScene, cam);\n            webgl.renderBuffers(gl, programInfo, buffers, projectionMatrix, modelViewMatrixScene);\n\n            const modelViewMatrixPlayer = mat4.create();\n            mat4.rotate(modelViewMatrixPlayer, modelViewMatrixPlayer, -0.5, [1, 0, 0]);\n            mat4.translate(modelViewMatrixPlayer, modelViewMatrixPlayer, cam);\n            mat4.translate(modelViewMatrixPlayer, modelViewMatrixPlayer, player);\n            webgl.renderBuffers(gl, programInfo, playerBuffers, projectionMatrix, modelViewMatrixPlayer);\n\n            for (let i = 0; i < Math.min(100, stubblePositions.length / 5); i += 5) {\n                const modelViewMatrixStubble = mat4.create();\n                mat4.rotate(modelViewMatrixStubble, modelViewMatrixStubble, -0.5, [1, 0, 0]);\n                mat4.translate(modelViewMatrixStubble, modelViewMatrixStubble, cam);\n                mat4.translate(modelViewMatrixStubble, modelViewMatrixStubble, stubblePositions[i]);\n                webgl.renderBuffers(gl, programInfo, stubbleBuffers, projectionMatrix, modelViewMatrixStubble);\n            }\n\n            deltaFrame = delta;\n            return fade;\n        });\n    }, [board]);\n    return (\n        <Grow in={fade} onExited={_onExited}>\n            <div className={classes.wrapper}>\n                <canvas id=\"webgl-context\" width={physicalSize[0]} height={physicalSize[1]} background=\"red\" />\n            </div>\n        </Grow>\n    )\n}\n\nexport default Game;","const createNewBoard = (width, height) => {\n    let bArray = [];\n    for (let i = 0; i < width; i++) {\n        let arr = [];\n        for (let j = 0; j < height; j++) {\n            arr.push(15);\n        }\n        bArray.push(arr);\n    }\n    return bArray;\n}\n\nconst EdgeTypes = {\n    bottom: {\n        binary: \"1000\",\n        decimal: 4,\n    },\n    right: {\n        binary: \"0100\",\n        decimal: 3,\n    },\n    top: {\n        binary: \"0010\",\n        decimal: 2,\n    },\n    left: {\n        binary: \"0001\",\n        decimal: 1\n    }\n}\n\nconst EdgeOpposites = {\n    bottom: {\n        oppositeType: \"top\",\n        direction: [0, -1]\n    },\n    top: {\n        oppositeType: \"bottom\",\n        direction: [0, 1]\n    },\n    left: {\n        oppositeType: \"right\",\n        direction: [-1, 0]\n    },\n    right: {\n        oppositeType: \"left\",\n        direction: [1, 0]\n    }\n}\n\nconst zeroBit = (int, idx) => {\n    let bin = int.toString(2);\n    while (bin.length < 4) {\n        bin = `0${bin}`;\n    }\n    bin = bin.substring(0, idx) + \"0\" + bin.substring(idx + 1);\n    return parseInt(bin, 2);\n}\n\nconst createEdge = (board, x, y, edgeType) => {\n    if ((x === 0 && edgeType === \"left\") ||\n        (y === 0 && edgeType === \"bottom\") ||\n        (x === board.length && edgeType === \"right\") ||\n        (y === board[0].length && edgeType === \"top\")) {\n        return board;\n    }\n    board[x][y] = zeroBit(board[x][y], 4 - EdgeTypes[edgeType].decimal);\n    let nX = x + EdgeOpposites[edgeType].direction[0];\n    let nY = y + EdgeOpposites[edgeType].direction[1];\n    board[nX][nY] = zeroBit(board[nX][nY], 4 - EdgeTypes[EdgeOpposites[edgeType].oppositeType].decimal);\n    return board;\n}\n\nconst getEdges = (board, x, y) => {\n    let bin = board[x][y].toString(2);\n    while (bin.length < 4) {\n        bin = `0${bin}`;\n    }\n    let edges = [];\n    let potentialEdges = [];\n    if (bin.charAt(0) === '1') {\n        if (y - 1 >= 0) {\n            potentialEdges.push([x, y - 1, \"bottom\"]);\n        }\n    } else {\n        edges.push([x, y - 1, \"bottom\"])\n    }\n    if (bin.charAt(1) === '1') {\n        if (x + 1 < board.length) {\n            potentialEdges.push([x + 1, y, \"right\"]);\n        }\n    } else {\n        edges.push([x + 1, y, \"right\"]);\n    }\n    if (bin.charAt(2) === '1') {\n        if (y + 1 < board[0].length) {\n            potentialEdges.push([x, y + 1, \"top\"]);\n        }\n    } else {\n        edges.push([x, y - 1, \"top\"]);\n    }\n    if (bin.charAt(3) === '1') {\n        if (x - 1 >= 0) {\n            potentialEdges.push([x - 1, y, \"left\"]);\n        }\n    } else {\n        edges.push([x - 1, y, \"left\"]);\n    }\n    return { potentialEdges, edges };\n};\n\nconst randomWalk = (board, start) => {\n    let visited = {};\n    let availableNeighbors = {};\n    visited[start] = true;\n    let { potentialEdges } = getEdges(board, start[0], start[1]);\n    for (let i = 0; i < potentialEdges.length; i++) {\n        availableNeighbors[[potentialEdges[i][0], potentialEdges[i][1]]] = [potentialEdges[i][2]];\n    }\n    while (Object.keys(visited).length < board.length * board[0].length) {\n        // choose a neighbor\n        let node = Object.keys(availableNeighbors)[Math.floor(Math.random() * Object.keys(availableNeighbors).length)]\n        if (!node) {\n            break;\n        }\n        let direction = availableNeighbors[node][Math.floor(Math.random() * availableNeighbors[node].length)]\n        node = node.split(\",\").map((item) => (parseInt(item)));\n        board = createEdge(board, node[0], node[1], EdgeOpposites[direction].oppositeType);\n        visited[node] = true;\n        delete availableNeighbors[node];\n        let { potentialEdges } = getEdges(board, node[0], node[1]);\n        for (let i = 0; i < potentialEdges.length; i++) {\n            if (!visited[[potentialEdges[i][0], potentialEdges[i][1]]]) {\n                if (!availableNeighbors[[potentialEdges[i][0], potentialEdges[i][1]]]) {\n                    availableNeighbors[[potentialEdges[i][0], potentialEdges[i][1]]] = [potentialEdges[i][2]];\n                } else {\n                    availableNeighbors[[potentialEdges[i][0], potentialEdges[i][1]]].push(potentialEdges[i][2]);\n                }\n            }\n        }\n    }\n    return board;\n}\n\nconst graph = {\n    createNewBoard,\n    EdgeTypes,\n    createEdge,\n    getEdges,\n    randomWalk\n};\n\nexport default graph;","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        background: `url(background.jpg)`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \"center\",\n        height: \"100vh\",\n        display: \"flex\"\n    },\n    wrapper: {\n        padding: theme.spacing(10),\n        justifyContent: \"center\",\n        backdropFilter: \"blur(10px)\",\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    title: {\n        fontFamily: \"DotGothic16, sans-serif\",\n        textAlign: \"center\",\n        backdropFilter: \"blur(10px)\",\n        userSelect: \"none\"\n    },\n    subtitle: {\n        fontFamily: \"DotGothic16, sans-serif\",\n        textAlign: \"center\",\n        userSelect: \"none\"\n    },\n    controlText: {\n        userSelect: \"none\",\n        fontFamily: \"DotGothic16, sans-serif\",\n    },\n    controlsWrapper: {\n        marginTop: theme.spacing(2),\n        textAlign: \"center\"\n    },\n    controls: {\n        maxWidth: 500,\n        margin: \"auto\",\n        textAlign: \"left\"\n    },\n    numberInputs: {\n        margin: theme.spacing(1),\n        width: \"10\",\n        borderRadius: \"0px\",\n        textAlign: \"center\"\n    },\n    buttonGroup: {\n        textAlign: \"center\",\n    },\n    submit: {\n        fontFamily: \"DotGothic16, sans-serif\",\n        textAlign: \"right\"\n    }\n}));\n\nexport { useStyles };","import { useState } from \"react\";\nimport {\n    Typography,\n    Container,\n    Grow,\n    Button,\n    ButtonGroup\n} from \"@material-ui/core\"\nimport { useStyles } from \"./styles\";\n\n\nconst Start = ({ onReturn }) => {\n    const classes = useStyles();\n    const [fade, setFade] = useState(true);\n    const _onSubmit = (e) => {\n        e.preventDefault();\n        setFade(false);\n    }\n    const _onExited = (e) => {\n        if (onReturn) {\n            onReturn();\n        }\n    }\n    return (\n        <Grow in={fade} onExited={_onExited}>\n            <Container className={classes.wrapper}>\n                <Typography variant=\"h1\" component=\"h1\" className={classes.title}>\n                    You Won!\n                </Typography>\n                <Typography variant=\"subtitle1\" component=\"h2\" className={classes.subtitle}>\n                    Thank you for playing!\n                </Typography>\n                <Container maxWidth=\"sm\" className={classes.controlsWrapper}>\n                    <form onSubmit={_onSubmit} className={classes.controls}>\n                        <div className={classes.buttonGroup}>\n                            <ButtonGroup>\n                                <Button type=\"submit\" color=\"primary\" className={classes.submit}>return</Button>\n                            </ButtonGroup>\n                        </div>\n                    </form>\n                </Container>\n            </Container>\n        </Grow>\n    )\n}\n\nexport default Start;","import { useState } from \"react\";\nimport {\n    Container,\n    CssBaseline,\n} from \"@material-ui/core\"\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { theme } from \"./theme\";\nimport { useStyles } from \"./App.styles\";\nimport Start from \"./Start\";\nimport Game from \"./Game\";\nimport graph from \"./Game/graph\";\nimport GameOver from \"./GameOver\";\n\nconst App = () => {\n    const classes = useStyles();\n    const [board, setBoard] = useState(null);\n    const [mode, setMode] = useState(\"menu\")\n    const onSubmit = (width, height) => {\n        let array = graph.createNewBoard(width, height);\n        let start = [0, Math.floor(Math.random() * height)];\n        array = graph.randomWalk(array, start);\n        let end = [width - 1, Math.floor(Math.random() * height)];\n        setBoard({\n            array,\n            start,\n            end\n        });\n        setMode(\"game\");\n    }\n    const onFinish = () => {\n        setMode(\"gameover\");\n        setBoard(null);\n    }\n    const onReturn = () => {\n        setMode(\"menu\");\n    }\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Container fluid maxWidth={false} className={classes.root}>\n                { mode === \"menu\" &&\n                    <Start onSubmit={onSubmit} />}\n                { mode === \"game\" &&\n                    <Game board={board} onFinish={onFinish} />}\n                { mode === \"gameover\" &&\n                    <GameOver onReturn={onReturn} />}\n            </Container>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}